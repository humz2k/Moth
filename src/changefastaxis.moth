def void fast_z_to_x(double[:,:] source, double[:,:] dest, int[:] local_grid_size):
    for int i in range(local_grid_size[2]):
        for int j in range(local_grid_size[1]):
            for int k in range(local_grid_size[2]):
                int d = i*(local_grid_size[1])*(local_grid_size[0]) + j*(local_grid_size[0]) + k
                int s = k*(local_grid_size[1])*(local_grid_size[2]) + j*(local_grid_size[2]) + i
                dest[d,0] = source[s,0]
                dest[d,1] = source[s,1]

def void fast_x_to_y(double[:,:] source, double[:,:] dest, int[:] local_grid_size):
    for int i in range(local_grid_size[0]):
        for int j in range(local_grid_size[2]):
            for int k in range(local_grid_size[1]):
                int d = i*(local_grid_size[2])*(local_grid_size[1]) + j*(local_grid_size[1]) + k
                int s = j*(local_grid_size[0])*(local_grid_size[1]) + k*(local_grid_size[0]) + i
                
                dest[d,0] = source[s,0]
                dest[d,1] = source[s,1]

def void fast_y_to_z(double[:,:] source, double[:,:] dest, int[:] local_grid_size):
    for int i in range(local_grid_size[0]):
        for int j in range(local_grid_size[1]):
            for int k in range(local_grid_size[2]):
                int d = i*(local_grid_size[1])*(local_grid_size[2]) + j*(local_grid_size[2]) + k
                int s = i*(local_grid_size[1])*(local_grid_size[2]) + k*(local_grid_size[1]) + j
                
                dest[d,0] = source[s,0]
                dest[d,1] = source[s,1]


