cinclude <fftw3.h>

class plan(type):
    __c_type(fftw_plan) raw
    def void __init__():
        pass

class fftw(static):

    def int forward():
        return __c_lit(FFTW_FORWARD)

    def int backward():
        return __c_lit(FFTW_BACKWARD)

    def uint measure():
        return __c_lit(FFTW_MEASURE)

    def plan plan_many_dft(int rank, int[:] n, int howmany, double[:,:] inp, int[:] inembed, int istride, int idist, double[:,:] out, int[:] onembed, int ostride, int odist, int sign, uint flags):
        plan new_plan = new plan()
        new_plan.raw = __c_call(fftw_plan_many_dft,__c_val(rank),__c_ptr(n),__c_val(howmany),__c_raw(__c_raw("reinterpret_cast<double(*)[2]>(",__c_ptr(inp)),__c_raw(")")),__c_lit(NULL),__c_val(istride),__c_val(idist),__c_raw(__c_raw("reinterpret_cast<double(*)[2]>(",__c_ptr(out)),__c_raw(")")),__c_lit(NULL),__c_val(ostride),__c_val(odist),__c_val(sign),__c_val(flags))
        return new_plan

    def void execute(plan in_plan):
        __c_call(fftw_execute,__c_val(in_plan.raw))

    def void destroy_plan(plan in_plan):
        __c_call(fftw_destroy_plan,__c_val(in_plan.raw))